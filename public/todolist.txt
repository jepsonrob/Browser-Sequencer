TO DO

	
	The larger plan:
	End goal - a multi-sequencer workstation utilising websockets (and node.js) for many connections to the same workspace.


	Front end:
		- make it look good!
		- make it responsive & working on mobile!
		- Make the sequencers change through the css display:hide element and buttons. 
		- Make the sequencers look nice and stuff with colours.
		- Title, footer, links... all the standard making a website bullshit.
		- Make the sliders look nicer and open when you press an 'advanced' button

	Client Code:
		
		- Encapsulate this script so there are no global variables, and make sure all buttons are pressed with event listeners/jQuery selectors.
		

	Server Code:
		- Save and load sequencer JSON files on server on/off
		- How to make them start at the same time!? (should be - needs testing!)
		- Get the synth settings changes input and then broadcast!
			(Number recieved will be the number to go to, client side then automates current number to move towards it at the rate of 1 bar.)
		- Make the chat room.

	
	Client audio plan:

		FOUR SEQUENCERS (with 4 phrase sequencers):
			- Percusson / Bass / Samples / Synthesizer
	
		Percussion: sampled
		Kicks / Snare / Hats / Other
		Bass / Harmony / Melody: Synthesized.

		Harmony: Sampled (w/ bank switching)
		Piano / Violin (switch out note length, when at lowest become pizzicato) / Harp / E. Piano(?) / 

	Effects for each: Distortion, Reverb, Delay, Bitcrush, Chorus, Tremolo.

	Synthesizers:
		2 Oscillators	[Sine/Square/Sawtooth/Noise]
		1 FM Oscillator [Sine/Square/Sawtooth/Noise]
		Oscillator level/gain
		Pitch change - Octave, Semitone, Detune
		Pitch Envelope

		2 Filters [ "lowpass", "highpass", "bandpass", "notch"]
		
		
	// NOTE! PHRASE SEQUENCERS ARE FUCKED WITH COLOUR
	
Sliders and such:

volumeOne
volumeTwo
volumeThree
volumeFour
---
volume range: -80 - 0	
--- 
delayOne
delayTwo
delayThree
delayFour
---
delay range (wet): 0 - 1
---
delayTimeOne
delayTimeTwo
delayTimeThree
delayTimeFour
---
delay time range: 0.01 - 400 (ms)
---
delayFeedbackOne
delayFeedbackTwo
delayFeedbackThree
delayFeedbackFour
---
delay feedback range: 0 - 100
---
distOne
distTwo
distThree
distFour
---
distortion range (wet): 0 - 100
---
crushOne
crushTwo
crushThree
crushFour
---
bitCrush range: 0 - 100
--- // filters can be made using the Tone.EQ3 component: .lowFrequency and .highFrequency are useful here, and have the gain set low!
hiPassOne
hiPassTwo
hiPassThree
hiPassFour
---
lowPassOne
lowPassTwo
lowPassThree
lowPassFour
---
filter range: 20 - 20,000 (logarithmic)
---

--- Synth One - FM

Volume (log slider)

Main osciallator (Dropdown)
Mod Oscillator (Dropdown)

Mod Value (slider)
Harmonicity (slider)

Attack (slider)
Decay (slider)
Sustain (slider)
Release (slider)

Mod Attack (slider)
Mod Decay (slider)
Mod Sustain (slider)
Mod Release (slider)

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)

Distortion wet/dry (slider)

Bitcrush wet/dry (slider)


--- Synth Two (MonoSynth)

Volume (log slider)

Main osciallator (Dropdown)
Filter Type (Dropdown)

Filter Frequency (log slider)
Filter Q (Slider)

Attack (slider)
Decay (slider)
Sustain (slider)
Release (slider)

Filter Attack (slider)
Filter Decay (slider)
Filter Sustain (slider)
Filter Release (slider)

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)

Distortion wet/dry (slider)

Bitcrush wet/dry (slider)

--- Synth 3 (Sampler) --- different instruments (harp, piano, violin, violin (pizz.), e. piano)

Volume (log slider)

Sample Bank (dropdown)

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)

Distortion wet/dry (slider)

Bitcrush wet/dry (slider)

--- Synth 4 (Sampler)

Volume (log slider)

Sample Bank (dropdown) --- Different Percussion kits!

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)

Distortion wet/dry (slider)

Bitcrush wet/dry (slider)


Synth 1 & 2:
FM Synth


Synth 3:
Sampler, different sample 'packs' available: e-piano, harp, violin, piano

Synth 4:
Percussion - able to swap out sample 'packs' for perc,hat,snare & kick. 4 packs each.



Random little things to-do list:

	- git push after each git commit
	- make sure the sequencer gets re-drawn even when stopped! (try changing phrase whilst sequencer is stopped. See?!)
	- Continue testing other devices and crying at how bad it runs
	- need to test and make sure the clients are properly syncronized!
	- contain all sequencers in their own setInterval draw loop
	- allow for canvas hotswapping of sequencers and phrasesequencers.
	- Allowing for logarithmic slider values (for decibels and such)
	
	
	
	
DONE SINCE LAST COMMIT:
	- figured out why the fuck notes aren't being broadcast!
	- send the velocity values as well as all other data, because it turns out the notes are just getting turned on & off on other computers! Ahh!
	- Make the sequencer canvases (& phrase sequencers) hot-swap (ANSWER: USE CSS!)
	- Made it work on shitty devices! Sampling velocity was an issue (using undefined to skip parameters) and now there will be 2 samplers, 2 sequencers. Sequencers have reduced poly. Now it works on iphone! Next test - chromebook.
	- Final sequencer plan - Figure out exactly what buttons & things are needed! Draw a big ol' plan!
	
	


	
	
	

CURRENTLY WORKING ON:

	
NEXT TO DO:
	- Figure out how to make scaling logarithmic!
	- completely implement and test the sliders:
		- create every effect according to the sequencer plan
		- create sliders for every effect (& make sure they are correctly scaled)
		- TEST EVERYTHING ALL THE TIME
	- Put the sequencers on a canvas event loop... Maybe also make them hot-swappable? I mean it can't hurt! And seems pretty easy.
	- fully implement final design
	- Design the front end - what will it look like?!
	- Find specific samples to use with e
	
