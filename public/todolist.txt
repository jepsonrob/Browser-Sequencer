TO DO

	
	The larger plan:
	End goal - a multi-sequencer workstation utilising websockets (and node.js) for many connections to the same workspace.


	Front end:
		- make it look good!
		- make it responsive & working on mobile!
		- Make the sequencers change through the css display:hide element and buttons. 
		- Make the sequencers look nice and stuff with colours.
		- Title, footer, links... all the standard making a website bullshit.
		- Make the sliders look nicer and open when you press an 'advanced' button

	Client Code:
		
		- Encapsulate this script so there are no global variables, and make sure all buttons are pressed with event listeners/jQuery selectors.
		

	Server Code:
		- Save and load sequencer JSON files on server on/off
		- How to make them start at the same time!? (should be - needs testing!)
		- Get the synth settings changes input and then broadcast!
			(Number recieved will be the number to go to, client side then automates current number to move towards it at the rate of 1 bar.)
		- Make the chat room.

	
	Client audio plan:

		FOUR SEQUENCERS (with 4 phrase sequencers):
			- Percusson / Bass / Samples / Synthesizer
	
		Percussion: sampled
		Kicks / Snare / Hats / Other
		Bass / Harmony / Melody: Synthesized.

		Harmony: Sampled (w/ bank switching)
		Piano / Violin (switch out note length, when at lowest become pizzicato) / Harp / E. Piano(?) / 

	Effects for each: Distortion, Reverb, Delay, Bitcrush, Chorus, Tremolo.

	Synthesizers:
		2 Oscillators	[Sine/Square/Sawtooth/Noise]
		1 FM Oscillator [Sine/Square/Sawtooth/Noise]
		Oscillator level/gain
		Pitch change - Octave, Semitone, Detune
		Pitch Envelope

		2 Filters [ "lowpass", "highpass", "bandpass", "notch"]
		
		
	// NOTE! PHRASE SEQUENCERS ARE FUCKED WITH COLOUR
	
Sliders and such:

volumeOne
volumeTwo
volumeThree
volumeFour
---
volume range: -80 - 0	
--- 
synthOneModValue
synthTwoFilterFreq
synthOneHarmonicity
synthTwoFilterQ
---
envelopes between 0 & 1
---
attackOne
attackTwo
attackOneMod
attackTwoMod
---
decayOne
decayTwo
decayOneMod
decayTwoMod
---
sustainOne
sustainTwo
sustainOneMod
sustainTwoMod
---
releaseOne
releaseTwo
releaseOneMod
releaseTwoMod
---
effects
---
delayOne
delayTwo
delayThree
delayFour
---
delay range (wet): 0 - 1
---
delayTimeOne
delayTimeTwo
delayTimeThree
delayTimeFour
---
delay time range: 0.01 - 0.4 (400 ms)
---
delayFeedbackOne
delayFeedbackTwo
delayFeedbackThree
delayFeedbackFour
---
delay feedback range: 0 - 90
---
crushOne
crushTwo
crushThree
crushFour
---
bitCrush range: 0 - 100
--- 
hiPassOne
hiPassTwo
hiPassThree
hiPassFour
---
lowPassOne
lowPassTwo
lowPassThree
lowPassFour
---
filter range: 20 - 20,000 (logarithmic)
---

--- Synth One - FM

Volume (log slider)

Main Osciallator (Dropdown)
Mod Oscillator (Dropdown)

Mod Value (slider)
Harmonicity (slider)

Attack (slider)
Decay (slider)
Sustain (slider)
Release (slider)

Mod Attack (slider)
Mod Decay (slider)
Mod Sustain (slider)
Mod Release (slider)

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Bitcrush wet/dry (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)


--- Synth Two (MonoSynth)

Volume (log slider)

Main osciallator (Dropdown)
Filter Type (Dropdown)

Filter Frequency (log slider)
Filter Q (Slider)

Attack (slider)
Decay (slider)
Sustain (slider)
Release (slider)

Filter Attack (slider)
Filter Decay (slider)
Filter Sustain (slider)
Filter Release (slider)

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Bitcrush wet/dry (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)


--- Synth 3 (Sampler) --- different instruments (harp, piano, violin, violin (pizz.), e. piano)

Volume (slider)

Sample Bank (dropdown)

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Bitcrush wet/dry (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)



--- Synth 4 (Sampler) --- Different Percussion kits!

Volume (log slider)

Sample Bank (dropdown) 

Effects:

Delay wet/dry (slider)
Delay Feedback (slider)
Delay Time (slider)

Bitcrush wet/dry (slider)

Low-pass filter (freq) (log slider)
High-pass filter (freq) (log slider)




Synth 1 & 2:
FM Synth


Synth 3:
Sampler, different sample 'packs' available: e-piano, harp, violin, piano

Synth 4:
Percussion - able to swap out sample 'packs' for perc,hat,snare & kick. 4 packs each.



Random little things to-do list:

	- git push after each git commit
	- make sure the sequencer gets re-drawn even when stopped! (try changing phrase whilst sequencer is stopped. See?!) (will be fixed when canvases have their own loops!)
	- Continue testing other devices and crying at how bad it runs
	- test how process heavy 4 reverbs is.
	- you can use .rampTo(1,3) to make effects change. That is useful information I wish I had a while ago! https://github.com/Tonejs/Tone.js/wiki/Effects
	- Sequencer settigns not being sent to server?!
	
	
DONE SINCE LAST COMMIT:

	- Figured out how to make scaling logarithmic! ... except it doesn't work for negative numbers. ah well. OR WORK AT ALL IT SEEMS!
	- made the majority of sliders - but so many issues!
	- fixed so many things, jeez what a nightmare
	- ALL SLIDERS NOW IN OPERATION! WOOHOO!
	- Radio Buttons & random frontend stuff
	- ... I did so much! The sequencers are coloured. And all in one(/two) canvas(es). It's a much better system now, and works really well on mobile! Woohoo!
	- Squashed a lotta bugs
	- Radio button colours switching out
	- Everything to do with the phrase selector needs sorting!
		
	

CURRENTLY WORKING ON:

	- radio buttons for effects (Main Osc + Filter Type & mod osc)
	
	


	
NEXT TO DO:
	
	- Turn the multiPlayer into a multi buffer thing, then use a sampler to trigger! ... A sampler wrapped in a poly? Hmm.

	- Implement the radio button system for switching out oscillators, filter types (and dropdown for sample banks.)
	- fully implement final design
	- Design the front end - what will it look like?!
	- Find specific samples to use with e
	
